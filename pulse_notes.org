** pulse delayer/stretcher/manipulator

TO RESOLVE:

- do we have modes?
- what is the platform? could use CD as test platform (choose CVs for XY)? memory?
- do we have multiple layers of out (possibel outcomes)

defining:
- pulse in/s/multiple in/outs? 
- controller pulses... logic of multiple pulses...
- X/Y CV/pots (multiples?)
- number of pulses to delay= CV/pot

mode etc???

To begin:
- code trial of no delay of pulses in, across x second buffer
- change length of buffer with CV
- stretch pulses

** notebook notes//

pulse delayer (notes for that? 24/9 grey notebook):

X pulses can be delayed every second, XandY graph determines delay for say 2000 pulses per second (memory=each pulse has a time and a delay) 2khz signal…

modes for resolution

delay and decay

how delay works - swop rec/play…??? delay line is simpler… samples go
into delay line which wraps… // list of pulses…

** newer notes

feedback

wet/dry out

pulse stretch/shorten according to another graph

pulse discard kill layer - if they are beneath level graph xy

clock divider on a group of pulses (eg. on x pulses we divide by y, or on all pulses in time x we divide by y):

- or we use a second pulse input as a controller - ie. divide in this region on/off

what is the identity of a pulse? the time it occurs in relation to other pulses

is it about stretching the gaps... the time between one pulse and the next?

what information we need to store for each pulse and what is the main loop?

- say norm of scanning 0-Xv across for Y element of CVs... at speed Z???

- so how many XY CV we have according to thes ops
